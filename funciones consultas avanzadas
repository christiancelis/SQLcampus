-- consultas avanzadas 

-- funciones de agregacion

-- max(), min(), 

-- diferencia entre count(*) calcula el numero de filas que tiene el resultado de la columna
-- y count(consulta) -> cuenta el numero de valores no nulos que hay en esa columna

-- count(distinct columna) -> cuantos resultados hay distintos, osea unicos

-- group by, agrupar valores identicos de una tabla



drop schema if exists miprimerabasededatos;
create schema if not exists miprimerabasededatos
default  character set utf8;
show warnings;
use miprimerabasededatos;

create table if not exists coches(
	id int(11) not null auto_increment,
    marca varchar(45) not null,
    modelo varchar(45) not null,
	kilometros int(11) not null,
    primary key(id)
)
engine = InnoDB
auto_increment = 10
default character set = utf8;


insert into coches(marca,modelo,kilometros) values("Renault","clio","10"),
("Renault","Megane",23000),
("Seat","Ibiza",9000),
("Seat","Leon",20),
("Opel","Corsa",999),
("Renault","Clio",34000),
("Seat","Ibiza",2000),
("Seat","Cordoba",99999),
("Renault","Clio",88888);


select marca
from coches
group by marca;


select marca, count(*) as contador
from coches
group by marca
order by contador;


select marca, sum(kilometros) as kilometrajetotal
from coches
group by marca
order by  kilometrajetotal;

select marca, max(kilometros) as maxk
from coches
group by marca;


select marca, min(kilometros) as mink
from coches
group by marca;


-- having

-- nos permite crear filtros sobre el group by -- para sacar ciertos registros que cumplen esa condicion

